function factorize(n::T) where T <: Integer
    factors = NamedTuple{(:div, :deg)}[] # Создаем пустой вектор для хранения результата
    
    # Проверяем на 2
    deg = 0
    while n % 2 == 0 # Пока n делится на 2 без остатка
        deg += 1 # Увеличиваем кратность делителя
        n ÷= 2 # Делим n на 2
    end
    if deg > 0 # Если 2 является делителем
        push!(factors, (div=2, deg=deg)) # Добавляем кортеж в вектор
    end
    
    # Проверяем на нечетные числа
    i = 3
    while i * i <= n # Пока i^2 <= n
        deg = 0
        while n % i == 0 # Пока n делится на i без остатка
            deg += 1 # Увеличиваем кратность делителя
            n ÷= i # Делим n на i
        end
        if deg > 0 # Если i является делителем
            push!(factors, (div=i, deg=deg)) # Добавляем кортеж в вектор
        end
        i += 2 # Переходим к следующему нечетному числу
    end
    
    # Если n > 2, то n - простое число
    if n > 2 # Если n не равно 1 и не делится на 2
        push!(factors, (div=n, deg=1)) # Добавляем n как делитель с кратностью 1
    end
    
    return factors # Возвращаем вектор кортежей
end